// 자연수 N이 입력되면 재귀함수를 이용하여 1부터 N까지를 출력하는 프로그램을 작성하세요.

// ▣ 입력설명
// 첫 번째 줄은 정수 N(3<=N<=10)이 입력된다.

// ▣ 출력설명
// 첫째 줄에 출력한다.

// ▣ 입력예제 1
// 3

// ▣ 출력예제 1
// 123

// 아래의 재귀함수가 호출되는 순서는 이렇습니다.
// 먼저 스택에 dfs(3)이 호출됩니다 스택이 비었다는 가정하에 dfs(3)은 스택의 가장 아래쪽에 저장이됩니다.
// 이때 dfs(3)에 대한 스택프레임이 저장되는데 예를들어 num은 3이고 지역변수에 대한 정보등 그리고
// 복귀주소가 저장이 되는데 복귀주소란 자기가 함수에서 할 일이 끝나고 나서 스택에서 사라지고 나면
// 돌아갈 곳을 복귀주소라고 말합니다.
// 그렇게 진행이 되다가 함수가 일을 끝마치지 못하고 dfs(2)를 만나게 되는데 이때 할 일을 끝내지 못했기 때문에
// 저장되어 있던 dfs(3)의 스택 프레임은 잠시 대기상태가 되며 이어서 dfs(2) 의 스택 프레임을 동일하게 dfs(3)위에 쌓아올립니다.
// 이때 dfs(2)의 복귀주소는 dfs(3)이 됩니다. 그렇게 dfs(1) dfs(0) 까지 동일하게 진행이 되다가
// dfs(0) 에서 return을 만나 해야 할 일ㅇ을 끝내게 되면서 이때 dfs(0)의 스택 프레임이 사라지게 됩니다. 그리고 복귀주소에 의해
// dfs(1) 로 돌아가서 dfs(1)은 이전에 자기가 했던 일을 이어서 하게됩니다. (참고로 복귀주소란 이전에 자기가 호출됐던 곳으로 돌아감을 의미합니다.)
// 참고로 복귀주소로 돌아왔을 때 이전에 자기가 했던 일을 이어한다는 것은 함수가 예를들어 12번째줄까지 진행이 된 뒤에 다음 함수가 호출되었다면
// 복귀주소로 돌아오면 이전에 자기가 12번째 까지 일을 했었으니까 그 후에 이어서 하는 것을 말합니다.

function solution(n) {
  let arr = [];

  function dfs(num) {
    if (num === 0) {
      return;
    }
    dfs(num - 1);
    console.log(num);
  }

  dfs(n);

  return arr;
}

console.log(solution(3));
