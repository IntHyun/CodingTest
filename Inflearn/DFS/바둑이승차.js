// 철수는 그의 바둑이들을 데리고 시장에 가려고 한다. 그런데 그의 트럭은 C킬로그램 넘게 태
// 울수가 없다. 철수는 C를 넘지 않으면서 그의 바둑이들을 가장 무겁게 태우고 싶다.
// N마리의 바둑이와 각 바둑이의 무게 W가 주어지면, 철수가 트럭에 태울 수 있는 가장 무거운
// 무게를 구하는 프로그램을 작성하세요.

// ▣ 입력설명
// 첫 번째 줄에 자연수 C(1<=C<=100,000,000)와 N(1<=N<=30)이 주어집니다.
// 둘째 줄부터 N마리 바둑이의 무게가 주어진다.

// ▣ 출력설명
// 첫 번째 줄에 가장 무거운 무게를 출력한다.

// ▣ 입력예제 1
// 259 5
// 81
// 58
// 42
// 33
// 61

// ▣ 출력예제 1
// 242

function solution(c, arr) {
  let answer = Number.MIN_SAFE_INTEGER;
  let n = arr.length;

  function dfs(v, sum) {
    // 여기서 주어진 c의 숫자보다 sum이 커진다면 바로 return을 하여
    // sum이 큰 경우는 없습니다.
    // 아래의 코드가 없다면 모든 경우를 더했을때가 sum이 가장 큰 경우이므로
    // 모든 경우를 더한것이 답이되게 됩니다.
    if (sum > c) return;
    if (v === n) {
      // answer와 sum을 비교했을 때 더 큰 숫자로 바꾸어줌을 말합니다.
      // 첫번째 인자는 기준이 되는 변수, 두번쨰 인자는 비교해줄 변수를 입력합니다.
      // 따라서 answer를 가장 작은 숫자로 둔 뒤 answer와 sum을 비교합니다.
      // 비교를 한 뒤 sum이 크다면 sum이 answer가 되고 계속해서 sum과 비교해나가며
      // 주어진 c의 숫자와 가장 근접한 수를 리턴할 수 있습니다.
      answer = Math.max(answer, sum);
    } else {
      dfs(v + 1, sum + arr[v]);
      dfs(v + 1, sum);
    }
  }

  dfs(0, 0);

  return answer;
}

let arr = [81, 58, 42, 33, 61];
console.log(solution(151, arr));
